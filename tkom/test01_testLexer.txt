Token type: While
value: while
line: 1
col: 1

Token type: BraceLeft
value: (
line: 1
col: 7

Token type: Identifier
value: x
line: 1
col: 8

Token type: EqualityOperator
value: ==
line: 1
col: 10

Token type: Integer
value: 2
line: 1
col: 12

Token type: BraceRight
value: )
line: 1
col: 13

Token type: ParenthesesLeft
value: {
line: 1
col: 14

Token type: IntegerId
value: int
line: 2
col: 5

Token type: Identifier
value: a
line: 2
col: 9

Token type: Assignment
value: =
line: 2
col: 11

Token type: Integer
value: 8
line: 2
col: 13

Token type: Semicolon
value: ;
line: 2
col: 14

Token type: If
value: if
line: 3
col: 5

Token type: BraceLeft
value: (
line: 3
col: 7

Token type: Identifier
value: a
line: 3
col: 9

Token type: GreaterOrEqualOperator
value: >=
line: 3
col: 10

Token type: Integer
value: 2
line: 3
col: 12

Token type: AndOperator
value: ^
line: 3
col: 14

Token type: Identifier
value: a
line: 3
col: 16

Token type: InequalityOperator
value: !=
line: 3
col: 17

Token type: Integer
value: 5
line: 3
col: 19

Token type: BraceRight
value: )
line: 3
col: 21

Token type: Identifier
value: print
line: 3
col: 23

Token type: BraceLeft
value: (
line: 3
col: 28

Token type: Identifier
value: a
line: 3
col: 29

Token type: BraceRight
value: )
line: 3
col: 30

Token type: Semicolon
value: ;
line: 3
col: 31

Token type: ParenthesesRight
value: }
line: 4
col: 1

Token type: EOT
value: 
line: 4
col: 2

